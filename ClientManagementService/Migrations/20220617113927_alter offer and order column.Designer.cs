// <auto-generated />
using System;
using ClientManagementService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientManagementService.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220617113927_alter offer and order column")]
    partial class alterofferandordercolumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientManagementService.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("ManagerName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("ClientManagementService.Models.BranchStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("BranchStaff");
                });

            modelBuilder.Entity("ClientManagementService.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ContactPerson")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ClientManagementService.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ClientManagementService.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("ClientID")
                        .HasColumnType("int")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CustomerCurrency")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("OfferDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OfferDiscount")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("OfferTax")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("OfferTotal")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("OriginalOfferTotal")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("ClientManagementService.Models.OfferItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<bool>("IsDiscountApplied")
                        .HasColumnType("bit")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool>("IsTaxApplied")
                        .HasColumnType("bit")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ItemWeight")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("OfferId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<decimal>("OriginalProductCost")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ProductId");

                    b.ToTable("OfferItem");
                });

            modelBuilder.Entity("ClientManagementService.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("ClientID")
                        .HasColumnType("int")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CustomerCurrency")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("IsFromOffer")
                        .HasColumnType("bit")
                        .IsUnicode(false);

                    b.Property<int>("OfferId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderDiscount")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("OrderTax")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("OriginalOrderTotal")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ClientManagementService.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<bool>("IsDiscountApplied")
                        .HasColumnType("bit")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool>("IsTaxApplied")
                        .HasColumnType("bit")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ItemWeight")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<decimal>("OriginalProductCost")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("ClientManagementService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Descripion")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Duration")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool>("IsLicenseProduct")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<string>("ProtectionType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ClientManagementService.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("ClientManagementService.Models.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("datetime2")
                        .IsUnicode(false);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<bool>("GSTApplicable")
                        .HasColumnType("bit")
                        .IsUnicode(true);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<DateTime?>("StopDate")
                        .HasColumnType("datetime2")
                        .IsUnicode(false);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,3)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrice");
                });

            modelBuilder.Entity("ClientManagementService.Models.BranchStaff", b =>
                {
                    b.HasOne("ClientManagementService.Models.Branch", "Branch")
                        .WithMany("BranchStaffs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientManagementService.Models.Client", b =>
                {
                    b.HasOne("ClientManagementService.Models.Branch", "Branch")
                        .WithMany("Clients")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientManagementService.Models.Currency", "Currency")
                        .WithMany("Clients")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientManagementService.Models.OfferItem", b =>
                {
                    b.HasOne("ClientManagementService.Models.Offer", "Offer")
                        .WithMany("OfferItems")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientManagementService.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientManagementService.Models.OrderItem", b =>
                {
                    b.HasOne("ClientManagementService.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientManagementService.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientManagementService.Models.Product", b =>
                {
                    b.HasOne("ClientManagementService.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientManagementService.Models.ProductPrice", b =>
                {
                    b.HasOne("ClientManagementService.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClientManagementService.Models.Product", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
